name: OpenAPI Auto-Fetch & Code Generation

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    # Run weekly on Mondays at 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      force_regenerate:
        description: 'Force code regeneration even if no changes'
        required: false
        type: boolean

jobs:
  check-openapi-changes:
    runs-on: ubuntu-latest
    outputs:
      openapi_changed: ${{ steps.check-changes.outputs.openapi_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install --prefix generator

      - name: Fetch latest OpenAPI spec
        run: |
          curl -s https://raw.githubusercontent.com/near/nearcore/master/chain/jsonrpc/openapi/openapi.json -o generator/openapi_temp.json

      - name: Check for changes
        id: check-changes
        run: |
          if [ ! -f "generator/openapi.json" ] || ! cmp -s "generator/openapi_temp.json" "generator/openapi.json"; then
            echo "openapi_changed=true" >> $GITHUB_OUTPUT
            echo "OpenAPI spec has changed, will regenerate code"
            mv generator/openapi_temp.json generator/openapi.json
          else
            echo "openapi_changed=false" >> $GITHUB_OUTPUT
            echo "OpenAPI spec unchanged, skipping regeneration"
          fi

  regenerate-code:
    needs: check-openapi-changes
    if: needs.check-openapi-changes.outputs.openapi_changed == 'true' || github.event.inputs.force_regenerate == 'true'
    runs-on: ubuntu-latest
    env:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: generator/package-lock.json

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute for gradlew
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.3

      - name: Install generator dependencies
        run: npm install --prefix generator

      - name: Regenerate Kotlin code
        run: npm run generate --prefix generator

      - name: Build generated code
        run: ./gradlew :packages:client:compileKotlinJvm --no-daemon --stacktrace

      - name: Run tests on generated code
        run: ./gradlew :packages:client:jvmTest --no-daemon --stacktrace --continue

      - name: Configure git to use PAT for pushes (if provided)
        env:
          PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          if [ -n "$PAT" ]; then
            echo "Configuring git to use PAT for pushes"
            git config --global url."https://$PAT@github.com/".insteadOf "https://github.com/"
          else
            echo "No PERSONAL_ACCESS_TOKEN set; skipping git config"
          fi

      - name: Check PERSONAL_ACCESS_TOKEN present (non-sensitive)
        env:
          PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          if [ -n "$PAT" ]; then
            echo "PERSONAL_ACCESS_TOKEN is present in this runner"
          else
            echo "PERSONAL_ACCESS_TOKEN is NOT present in this runner"
          fi

      - name: Debug: show git URL rewrite (masked, non-sensitive)
        run: |
          echo "Checking for URL rewrite configured for github.com (masked)"
          git config --global --get-regexp '^url\..*github.com' 2>/dev/null || true
          git config --global --get-regexp '^url\..*github.com' 2>/dev/null | sed -E 's#https://[^@]*@#https://[redacted]@#' || echo "(no rewrite configured)"

      - name: Create Pull Request (use PAT)
        if: env.PERSONAL_ACCESS_TOKEN != ''
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ env.PERSONAL_ACCESS_TOKEN }}
          commit-message: |
            ðŸ¤– Auto-generated: Update NEAR JSON-RPC client from latest OpenAPI spec

            - Updated OpenAPI specification from nearcore
            - Regenerated Kotlin types and client code
            - All tests passing
          title: 'ðŸ¤– Auto-generated: Update NEAR JSON-RPC client from latest OpenAPI spec'
          body: |
            ## ðŸ¤– Automated Code Generation

            This PR was automatically created by the OpenAPI auto-fetch workflow.

            ### Changes
            - Updated OpenAPI specification from [nearcore](https://github.com/near/nearcore)
            - Regenerated Kotlin data types and client methods
            - All existing tests continue to pass

            ### Verification
            - âœ… Code compiles successfully
            - âœ… Unit tests pass
            - âœ… Integration tests pass (if applicable)

            ### Next Steps
            Review the generated code changes and merge if everything looks correct.

            ---
            *This PR was generated automatically. If you notice any issues, please report them in the comments.*
          branch: automated/openapi-update
          delete-branch: true
          labels: |
            automated
            dependencies
            enhancement

      - name: Create Pull Request (fallback: use GITHUB_TOKEN)
        if: env.PERSONAL_ACCESS_TOKEN == ''
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            ðŸ¤– Auto-generated: Update NEAR JSON-RPC client from latest OpenAPI spec

            - Updated OpenAPI specification from nearcore
            - Regenerated Kotlin types and client code
            - All tests passing
          title: 'ðŸ¤– Auto-generated: Update NEAR JSON-RPC client from latest OpenAPI spec'
          body: |
            ## ðŸ¤– Automated Code Generation

            This PR was automatically created by the OpenAPI auto-fetch workflow.

            ### Changes
            - Updated OpenAPI specification from [nearcore](https://github.com/near/nearcore)
            - Regenerated Kotlin data types and client methods
            - All existing tests continue to pass

            ### Verification
            - âœ… Code compiles successfully
            - âœ… Unit tests pass
            - âœ… Integration tests pass (if applicable)

            ### Next Steps
            Review the generated code changes and merge if everything looks correct.

            ---
            *This PR was generated automatically. If you notice any issues, please report them in the comments.*
          branch: automated/openapi-update
          delete-branch: true
          labels: |
            automated
            dependencies
            enhancement